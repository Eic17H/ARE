.constant
	OBJREF 0x40
	endline 0x3b
.end-constant

.main
.var
x
y
fun1xx
fun2yx
fun1xfun2yx
ris
.end-var

LDC_W OBJREF
INVOKEVIRTUAL input
ISTORE x

LDC_W OBJREF
INVOKEVIRTUAL input
ISTORE y

LDC_W OBJREF
ILOAD x
ILOAD x
INVOKEVIRTUAL fun1
ISTORE fun1xx

LDC_W OBJREF
ILOAD y
ILOAD x
INVOKEVIRTUAL fun2
ISTORE fun2yx

LDC_W OBJREF
ILOAD x
ILOAD fun2yx
INVOKEVIRTUAL fun1
ISTORE fun1xfun2yx

ILOAD fun1xx
ILOAD fun1xfun2yx
ISUB
ISTORE ris

LDC_W OBJREF
ILOAD ris
INVOKEVIRTUAL print
	
.end-main

.method fun1(a, b)
// if(a%2 == 0)
LDC_W OBJREF
ILOAD a
BIPUSH 2
INVOKEVIRTUAL mod

IFEQ ifvero
GOTO iffalso

ifvero:

// while(b+4-a < 0)
condizionewhile:
ILOAD b
BIPUSH 4
IADD
ILOAD a
ISUB
IFLT whilevero
GOTO whilefalso

whilevero:
IINC a -1
GOTO condizionewhile

// else if(!(a-b/2<0))
iffalso:
ILOAD a
LDC_W OBJREF
ILOAD b
BIPUSH 2
INVOKEVIRTUAL div
ISUB

IFLT if2falso
IINC a 3

if2falso:
whilefalso:
ILOAD a
ILOAD b
IADD
IRETURN
.end-method

.method fun2(b, c)
.var
g
.end-var
BIPUSH 10
ISTORE g

// if(g-b-c<0)
ILOAD g
ILOAD b
ILOAD c
ISUB
ISUB
IFLT ifvero

// ramo falso:
ILOAD b
BIPUSH 5
IADD
IRETURN

// ramo vero:
ifvero:
condizionewhile:
ILOAD b
BIPUSH 2
IADD
ILOAD g
ISUB
IFLT whilevero
GOTO fineif

whilevero:
LDC_W OBJREF
ILOAD b
BIPUSH 2
INVOKEVIRTUAL div
ILOAD g
IADD
ISTORE c
IINC b 1
IINC g -1
GOTO condizionewhile

fineif:
LDC_W OBJREF
ILOAD b
ILOAD c
IADD
BIPUSH 3
INVOKEVIRTUAL div
IRETURN
.end-method

.method mul(i, j)
    ILOAD j
    IFEQ zero
    IINC j  -1
    ILOAD i
    IFEQ zero
    LDC_W OBJREF
    ILOAD i
    ILOAD j
    INVOKEVIRTUAL mul
    ILOAD i
	IADD
	GOTO fine
zero:
	BIPUSH 0x0
fine:     
	IRETURN
.end-method


.method mod (a, b)
	ILOAD a
	IFEQ stop
	ILOAD a
	ILOAD b
	ISUB
	IFLT stop
	LDC_W OBJREF
	ILOAD a
	ILOAD b
	ISUB
	ILOAD b
	INVOKEVIRTUAL mod
	GOTO fine
stop:      
	ILOAD a
fine:
	IRETURN
.end-method

.method div (a, b)    
	ILOAD a    
	ILOAD b        
	ISUB        
	IFLT stop    
	LDC_W OBJREF    
	ILOAD a         
	ILOAD b        
	ISUB        
	ILOAD b        
	INVOKEVIRTUAL div
	BIPUSH 1        
	IADD        
	GOTO fine
stop:        
	BIPUSH 0x0    
fine:        
	IRETURN
.end-method

.method input()
	.var
		num
	.end-var
	
	BIPUSH 0x0
	ISTORE num
	
loop:
	IN
	DUP
	
	LDC_W ENDLINE
	ISUB
	IFEQ stop
	
	BIPUSH 0x30
	ISUB
	
	LDC_W OBJREF
	ILOAD num
	BIPUSH 10
	INVOKEVIRTUAL mul
	
	IADD
	ISTORE num
	GOTO loop
	
stop:
	ILOAD num
	IRETURN
	
.end-method


.method print(x)
	ILOAD x
	IFEQ printz
	
	LDC_W OBJREF
	ILOAD x
	INVOKEVIRTUAL print_digits
	GOTO end
printz:
	BIPUSH 0x30
	OUT
end:

	BIPUSH 0
	IRETURN
.end-method

.method print_digits(x)
	.var
		char
	.end-var

	ILOAD x
	IFEQ end
	
	LDC_W OBJREF
	ILOAD x
	BIPUSH 10
	INVOKEVIRTUAL mod
	
	BIPUSH 0x30
	IADD
	ISTORE char
	
	LDC_W OBJREF
	ILOAD x
	BIPUSH 10
	INVOKEVIRTUAL div
	
	LDC_W OBJREF
	SWAP
	INVOKEVIRTUAL print_digits
	
	ILOAD char
	OUT

end:
	BIPUSH 0
	IRETURN
.end-method
