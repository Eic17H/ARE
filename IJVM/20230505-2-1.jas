.constant
	OBJREF 0x40
	endline 0x3b
.end-constant

.main
    .var
        x
        y
        z
        fun2y1
        fun1fun2y1xz
        fun2x
    .end-var

        LDC_W OBJREF
        INVOKEVIRTUAL input
    ILOAD x
        LDC_W OBJREF
        INVOKEVIRTUAL input
    ILOAD y
        LDC_W OBJREF
        INVOKEVIRTUAL input
    ILOAD z

        LDC_W OBJREF
                ILOAD y
                BIPUSH 1
            IADD
        INVOKEVIRTUAL fun2
    ISTORE fun2y1

        LDC_W OBJREF
            ILOAD fun2y1
                ILOAD x
                ILOAD z
            IADD
        INVOKEVIRTUAL fun1
    ISTORE fun1fun2y1xz

        LDC_W OBJREF
            ILOAD x
        INVOKEVIRTUAL fun2
    ISTORE fun2x

    LDC_W OBJREF
            ILOAD fun1fun2y1xz
            ILOAD fun2x
        IADD
    INVOKEVIRTUAL print

    HALT
.end-main

.method fun1(x, y)
    condizione:
                ILOAD x
                ILOAD y
            IADD
            BIPUSH 12
        ISUB
    IFLT loop
    GOTO dopoloop

    loop:
        IINC y 2
        IINC x 1
    GOTO condizione
    dopoloop:
    
        LDC_W OBJREF
            ILOAD x
            BIPUSH 2
        INVOKEVIRTUAL mod
    IFEQ vero
    GOTO falso

    vero:
        IINC x 3
        IINC y 2
    GOTO dopoif

    falso:
        IINC x 2
        IINC y 2
    dopoif:

            ILOAD x
            ILOAD y
        IADD
    IRETURN
.end-method

.method fun2(b)
        ILOAD b
    IFEQ vero1
    GOTO falso1

    vero1:
            BIPUSH 6
        ISTORE b
    falso1:

            ILOAD b
            BIPUSH 5
        ISUB
    IFLT vero2
    GOTO falso2

    vero2:
            BIPUSH 5
        ISTORE b
    falso2:

    condizione:
        LDC_W OBJREF
            ILOAD b
            BIPUSH 3
        INVOKEVIRTUAL mod
    IFEQ falso3
    GOTO vero3

    vero3:
        IINC b 2
    GOTO condizione
    falso3:
    
            ILOAD b
            BIPUSH 3
        IADD
    IRETURN
.end-method


.method mul(i, j)
    ILOAD j
    IFEQ zero
    IINC j  -1
    ILOAD i
    IFEQ zero
    LDC_W OBJREF
    ILOAD i
    ILOAD j
    INVOKEVIRTUAL mul
    ILOAD i
	IADD
	GOTO fine
zero:
	BIPUSH 0x0
fine:     
	IRETURN
.end-method


.method mod (a, b)
	ILOAD a
	IFEQ stop
	ILOAD a
	ILOAD b
	ISUB
	IFLT stop
	LDC_W OBJREF
	ILOAD a
	ILOAD b
	ISUB
	ILOAD b
	INVOKEVIRTUAL mod
	GOTO fine
stop:      
	ILOAD a
fine:
	IRETURN
.end-method

.method div (a, b)    
	ILOAD a    
	ILOAD b        
	ISUB        
	IFLT stop    
	LDC_W OBJREF    
	ILOAD a         
	ILOAD b        
	ISUB        
	ILOAD b        
	INVOKEVIRTUAL div
	BIPUSH 1        
	IADD        
	GOTO fine
stop:        
	BIPUSH 0x0    
fine:        
	IRETURN
.end-method

.method input()
	.var
		num
	.end-var
	
	BIPUSH 0x0
	ISTORE num
	
loop:
	IN
	DUP
	
	LDC_W ENDLINE
	ISUB
	IFEQ stop
	
	BIPUSH 0x30
	ISUB
	
	LDC_W OBJREF
	ILOAD num
	BIPUSH 10
	INVOKEVIRTUAL mul
	
	IADD
	ISTORE num
	GOTO loop
	
stop:
	ILOAD num
	IRETURN
	
.end-method


.method print(x)
	ILOAD x
	IFEQ printz
	
	LDC_W OBJREF
	ILOAD x
	INVOKEVIRTUAL print_digits
	GOTO end
printz:
	BIPUSH 0x30
	OUT
end:

	BIPUSH 0
	IRETURN
.end-method

.method print_digits(x)
	.var
		char
	.end-var

	ILOAD x
	IFEQ end
	
	LDC_W OBJREF
	ILOAD x
	BIPUSH 10
	INVOKEVIRTUAL mod
	
	BIPUSH 0x30
	IADD
	ISTORE char
	
	LDC_W OBJREF
	ILOAD x
	BIPUSH 10
	INVOKEVIRTUAL div
	
	LDC_W OBJREF
	SWAP
	INVOKEVIRTUAL print_digits
	
	ILOAD char
	OUT

end:
	BIPUSH 0
	IRETURN
.end-method